name: Python CI

on:
  push:
    branches: [ main, test-publish ]
    tags:
      - 'v*'
      - 'test-v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:


jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Cache Poetry dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            !~/.cache/pypoetry/artifacts
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Lint with flake8
        run: |
          poetry run flake8 simnexus/

      - name: Type check
        run: |
          poetry run mypy simnexus

      - name: Run tests with pytest
        run: |
          poetry run pytest

      - name: Build MkDocs Documentation
        run: |
          poetry run mkdocs build
          touch site/.nojekyll 

      - name: Deploy MkDocs Documentation
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

      - name: Build package
        run: |
          poetry build

      - name: Publish package to TestPyPI
        if: startsWith(github.ref, 'refs/tags/test-v') || github.ref == 'refs/heads/test-publish'
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      
      - name: Publish package to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
